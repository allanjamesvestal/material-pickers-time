{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///TimePicker.js","webpack:///webpack/bootstrap 58b54ef736f90ac014cf","webpack:///./src/js/timepicker.js","webpack:///./src/js/template.js","webpack:///./src/js/assign.js","webpack:///./src/js/events.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_classCallCheck","instance","Constructor","TypeError","value","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_template","_template2","_assign","_assign2","_events","_events2","TimePicker","template","defaultOptions","timeFormat","autoNext","cachedEls","events","setupTemplate","body","document","overlay","getElementsByClassName","wrapper","picker","meridiem","meridiemSpans","getElementsByTagName","displayHours","displayMinutes","displayMeridiem","buttonCancel","buttonBack","buttonNext","buttonFinish","clockHours","clockMinutes","clockMilitaryHours","clockHand","clockHoursLi","clockMinutesLi","clockMilitaryHoursLi","setEvents","inputEl","_this","options","arguments","undefined","element","HTMLElement","querySelector","mtpOptions","addEventListener","event","showEvent","show","isTemplateInDOM","insertAdjacentHTML","_this2","hasSetEvents","hideEvent","showMinutes","showHours","finish","forEach","span","meridiemSelectEvent","hour","hourSelectEvent","minute","minuteSelectEvent","classList","add","isMilitaryFormat","blur","toggleHoursVisible","toggleMinutesVisible","setDisplayTime","hours","minutes","style","overflow","display","height","trigger","dispatchEvent","Event","resetState","stopPropagation","allowedClasses","some","allowedClass","contains","hide","currentStep","_ref","innerHTML","trim","min","nodeIndex","increment","rotateDeg","styleVal","transform","hourEls","rotateHand","getActiveIndex","minuteEls","timeSelected","isVisible","timeEls","activeIndex","timeEl","index","timeValue","containerEl","activeEl","remove","currentActive","isEqualNode","listEls","newActive","parentEl","parentElement","isInner","setActiveEl","displayTime","Boolean","assign","to","inc","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","Events","handler","push","params"],"mappings":"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","file":"TimePicker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TimePicker\"] = factory();\n\telse\n\t\troot[\"TimePicker\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TimePicker\"] = factory();\n\telse\n\t\troot[\"TimePicker\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _template = __webpack_require__(1);\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _assign = __webpack_require__(2);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _events = __webpack_require__(3);\n\nvar _events2 = _interopRequireDefault(_events);\n\n__webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class TimePicker\n *\n * @prop {string} template - TimePicker template\n * @prop {object} defaultOptions - Default config options\n * @prop {string} defaultOptions.timeFormat - 12 or 24 hour format ['standard', 'military']\n * @prop {bool} defaultOptions.autoNext - Auto-next on time element select\n * @prop {object} cachedEls - Cached elements in template\n * @prop {HTMLElement} cachedEls.body - document.body\n * @prop {HTMLElement} cachedEls.overlay - Overlay element ('.mtp-overlay')[0]\n * @prop {HTMLElement} cachedEls.wrapper - Wrapper element ('.mtp-wrapper')[0]\n * @prop {HTMLElement} cachedEls.picker - Selection elements wrapper ('.mtp-picker')[0]\n * @prop {HTMLElement} cachedEls.meridiem - Meridiem selection elements wrapper ('.mtp-meridiem')[0]\n * @prop {HTMLCollection} cachedEls.meridiemSpans - Meridiem selection elements meridiem('span')\n * @prop {HTMLElement} cachedEls.displayHours - Selected hour display element ('.mtp-display__hours')[0]\n * @prop {HTMLElement} cachedEls.displayMinutes - Selected minutes display element ('.mtp-display__minutes')[0]\n * @prop {HTMLElement} cachedEls.displayMerdiem - Selected meridiem display element ('.mtp-display__meridiem')[0]\n * @prop {HTMLElement} cachedEls.buttonCancel - Cancel button element ('.mtp-actions__cancel')[0]\n * @prop {HTMLElement} cachedEls.buttonBack - Back button element ('.mtp-actions__back')[0]\n * @prop {HTMLElement} cachedEls.buttonNext - Next button element ('.mtp-actions__next')[0]\n * @prop {HTMLElement} cachedEls.buttonFinish - Finish button element ('.mtp-actions__finish')[0]\n * @prop {HTMLElement} cachedEls.clockHours - Hour elements display wrapper ('.mtp-clock__hours')[0]\n * @prop {HTMLElement} cachedEls.clockMinutes - Minute elements display wrapper ('.mtp-clock__minutes')[0]\n * @prop {HTMLElement} cachedEls.clockMilitaryHours - Military hour elements display wrapper ('.mtp_clock__hours--military')[0]\n * @prop {HTMLElement} cachedEls.clockHand - Clock hand display ('.mtp-clock__hand')[0]\n * @prop {HTMLCollection} cachedEls.clockHoursLi - Hour list elements clockHours('li')\n * @prop {HTMLCollection} cachedEls.clockMinutesLi - Minute list elements clockMinutes('li')\n * @prop {HTMLCollection} cachedEls.clockMilitaryHoursLi - Militar Hour li elements clockMilitaryHours('li')\n */\nvar TimePicker = function () {\n\n    /**\n     * Initialize new TimePicker instance\n     *\n     * @return {TimePicker} New TimePicker instance\n     */\n    function TimePicker() {\n        _classCallCheck(this, TimePicker);\n\n        this.template = _template2.default;\n        this.defaultOptions = {\n            timeFormat: 'standard',\n            autoNext: false\n        };\n        this.cachedEls = {};\n\n        this.events = new _events2.default();\n\n        this.setupTemplate();\n\n        this.cachedEls.body = document.body;\n        this.cachedEls.overlay = this.cachedEls.body.getElementsByClassName('mtp-overlay')[0];\n        this.cachedEls.wrapper = this.cachedEls.overlay.getElementsByClassName('mtp-wrapper')[0];\n        this.cachedEls.picker = this.cachedEls.wrapper.getElementsByClassName('mtp-picker')[0];\n        this.cachedEls.meridiem = this.cachedEls.wrapper.getElementsByClassName('mtp-meridiem')[0];\n        this.cachedEls.meridiemSpans = this.cachedEls.meridiem.getElementsByTagName('span');\n        this.cachedEls.displayHours = this.cachedEls.wrapper.getElementsByClassName('mtp-display__hours')[0];\n        this.cachedEls.displayMinutes = this.cachedEls.wrapper.getElementsByClassName('mtp-display__minutes')[0];\n        this.cachedEls.displayMeridiem = this.cachedEls.wrapper.getElementsByClassName('mtp-display__meridiem')[0];\n        this.cachedEls.buttonCancel = this.cachedEls.picker.getElementsByClassName('mtp-actions__cancel')[0];\n        this.cachedEls.buttonBack = this.cachedEls.picker.getElementsByClassName('mtp-actions__back')[0];\n        this.cachedEls.buttonNext = this.cachedEls.picker.getElementsByClassName('mtp-actions__next')[0];\n        this.cachedEls.buttonFinish = this.cachedEls.picker.getElementsByClassName('mtp-actions__finish')[0];\n        this.cachedEls.clockHours = this.cachedEls.picker.getElementsByClassName('mtp-clock__hours')[0];\n        this.cachedEls.clockMinutes = this.cachedEls.picker.getElementsByClassName('mtp-clock__minutes')[0];\n        this.cachedEls.clockMilitaryHours = this.cachedEls.picker.getElementsByClassName('mtp-clock__hours-military')[0];\n        this.cachedEls.clockHand = this.cachedEls.picker.getElementsByClassName('mtp-clock__hand')[0];\n        this.cachedEls.clockHoursLi = this.cachedEls.clockHours.getElementsByTagName('li');\n        this.cachedEls.clockMinutesLi = this.cachedEls.clockMinutes.getElementsByTagName('li');\n        this.cachedEls.clockMilitaryHoursLi = this.cachedEls.clockMilitaryHours.getElementsByTagName('li');\n\n        this.setEvents();\n\n        return this;\n    }\n\n    /**\n     * Bind event to the input element to open when `focus` event is events.triggered\n     *\n     * @param {string|HTMLElement} inputEl Selector element to be queried or existing HTMLElement\n     * @param {object} options Options to merged with defaults and set to input element object\n     * @return {void}\n     */\n\n\n    _createClass(TimePicker, [{\n        key: 'bindInput',\n        value: function bindInput(inputEl) {\n            var _this = this;\n\n            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            var element = inputEl instanceof HTMLElement ? inputEl : document.querySelector(inputEl);\n\n            element.mtpOptions = (0, _assign2.default)({}, this.defaultOptions, options);\n            element.addEventListener('focus', function (event) {\n                return _this.showEvent(event);\n            });\n        }\n\n        /**\n         * Open picker with the input provided in context without binding events\n         *\n         * @param {string|HTMLElement} inputEl Selector element to be queried or existing HTMLElement\n         * @param {object} options Options to merged with defaults and set to input element object\n         * @return {void}\n         */\n\n    }, {\n        key: 'openOnInput',\n        value: function openOnInput(inputEl) {\n            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            this.inputEl = inputEl instanceof HTMLElement ? inputEl : document.querySelector(inputEl);\n            this.inputEl.mtpOptions = (0, _assign2.default)({}, this.defaultOptions, options);\n            this.show();\n        }\n\n        /**\n         * Setup the template in DOM if not already\n         *\n         * @return {void}\n         */\n\n    }, {\n        key: 'setupTemplate',\n        value: function setupTemplate() {\n            if (!this.isTemplateInDOM()) {\n                document.body.insertAdjacentHTML('beforeend', _template2.default);\n            }\n        }\n\n        /**\n         * Set the events on picker elements\n         *\n         * @return {void}\n         */\n\n    }, {\n        key: 'setEvents',\n        value: function setEvents() {\n            var _this2 = this;\n\n            if (!this.hasSetEvents()) {\n                // close\n                this.cachedEls.overlay.addEventListener('click', function (event) {\n                    return _this2.hideEvent(event);\n                });\n\n                this.cachedEls.buttonCancel.addEventListener('click', function (event) {\n                    return _this2.hideEvent(event);\n                });\n                this.cachedEls.buttonNext.addEventListener('click', function () {\n                    return _this2.showMinutes();\n                });\n                this.cachedEls.buttonBack.addEventListener('click', function () {\n                    return _this2.showHours();\n                });\n                this.cachedEls.buttonFinish.addEventListener('click', function () {\n                    return _this2.finish();\n                });\n\n                // meridiem select events\n                [].forEach.call(this.cachedEls.meridiemSpans, function (span) {\n                    span.addEventListener('click', function (event) {\n                        return _this2.meridiemSelectEvent(event);\n                    });\n                });\n\n                // time select events\n                [].forEach.call(this.cachedEls.clockHoursLi, function (hour) {\n                    hour.addEventListener('click', function (event) {\n                        _this2.hourSelectEvent(event, _this2.cachedEls.clockHours, _this2.cachedEls.clockHoursLi);\n                    });\n                });\n                [].forEach.call(this.cachedEls.clockMilitaryHoursLi, function (hour) {\n                    hour.addEventListener('click', function (event) {\n                        _this2.hourSelectEvent(event, _this2.cachedEls.clockMilitaryHours, _this2.cachedEls.clockMilitaryHoursLi);\n                    });\n                });\n                [].forEach.call(this.cachedEls.clockMinutesLi, function (minute) {\n                    minute.addEventListener('click', function (event) {\n                        _this2.minuteSelectEvent(event, _this2.cachedEls.clockMinutes, _this2.cachedEls.clockMinutesLi);\n                    });\n                });\n\n                this.cachedEls.wrapper.classList.add('mtp-events-set');\n            }\n        }\n\n        /**\n         * Show the picker in the DOM\n         *\n         * @return {void}\n         */\n\n    }, {\n        key: 'show',\n        value: function show() {\n            var isMilitaryFormat = this.isMilitaryFormat();\n\n            // blur input to prevent onscreen keyboard from displaying (mobile hack)\n            this.inputEl.blur();\n            this.toggleHoursVisible(true, isMilitaryFormat);\n            this.toggleMinutesVisible();\n            this.setDisplayTime({\n                hours: isMilitaryFormat ? '00' : '12',\n                minutes: '0'\n            });\n\n            this.cachedEls.body.style.overflow = 'hidden';\n            this.cachedEls.displayMeridiem.style.display = isMilitaryFormat ? 'none' : 'inline';\n            this.cachedEls.meridiem.style.display = isMilitaryFormat ? 'none' : 'block';\n            this.cachedEls.overlay.style.display = 'block';\n            this.cachedEls.clockHand.style.height = isMilitaryFormat ? '90px' : '105px';\n\n            this.events.trigger('show');\n        }\n\n        /**\n         * Event handle for input focus\n         *\n         * @param {Event} event Event object passed from listener\n         * @return {void}\n         */\n\n    }, {\n        key: 'showEvent',\n        value: function showEvent(event) {\n            this.inputEl = event.target;\n            this.show();\n        }\n\n        /**\n         * Hide the picker in the DOM\n         *\n         * @return {void}\n         */\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            this.cachedEls.overlay.style.display = 'none';\n            this.cachedEls.body.style.overflow = '';\n\n            this.inputEl.dispatchEvent(new Event('blur'));\n            this.resetState();\n            this.events.trigger('hide');\n        }\n\n        /**\n         * Hide the picker element on the page\n         *\n         * @param {Event} event Event object passed from event listener callback\n         * @return {void}\n         */\n\n    }, {\n        key: 'hideEvent',\n        value: function hideEvent(event) {\n            event.stopPropagation();\n\n            // only allow event based close if event.target contains one of these classes\n            // hack to prevent overlay close event from events.triggering on all elements because\n            // they are children of overlay\n            var allowedClasses = ['mtp-overlay', 'mtp-actions__cancel'];\n            var classList = event.target.classList;\n            var isAllowed = allowedClasses.some(function (allowedClass) {\n                return classList.contains(allowedClass);\n            });\n\n            if (isAllowed) {\n                this.hide();\n            }\n        }\n\n        /**\n         * Reset picker state to defaults\n         *\n         * @return {void}\n         */\n\n    }, {\n        key: 'resetState',\n        value: function resetState() {\n            this.currentStep = 0;\n            this.toggleHoursVisible(true, this.isMilitaryFormat());\n            this.toggleMinutesVisible();\n            this.cachedEls.clockHoursLi[0].dispatchEvent(new Event('click'));\n            this.cachedEls.clockMinutesLi[0].dispatchEvent(new Event('click'));\n            this.cachedEls.clockMilitaryHoursLi[0].dispatchEvent(new Event('click'));\n            this.cachedEls.meridiemSpans[0].dispatchEvent(new Event('click'));\n        }\n\n        /**\n         * Set the displayed time, which will be used to fill input value on completetion\n         *\n         * @param {object} hours: Hour display time, minutes: Minute display time\n         * @return {void}\n         */\n\n    }, {\n        key: 'setDisplayTime',\n        value: function setDisplayTime(_ref) {\n            var hours = _ref.hours,\n                minutes = _ref.minutes;\n\n            if (hours) {\n                this.cachedEls.displayHours.innerHTML = hours.trim();\n            }\n\n            if (minutes) {\n                var min = minutes < 10 ? '0' + minutes : minutes;\n\n                this.cachedEls.displayMinutes.innerHTML = min.trim();\n            }\n        }\n\n        /**\n         * Rotate the hand element to selected time\n         *\n         * @param {integer} nodeIndex Index of active element\n         * @param {integer} increment Degree increment elements are on\n         * @return {void}\n         */\n\n    }, {\n        key: 'rotateHand',\n        value: function rotateHand() {\n            var nodeIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 9;\n            var increment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;\n\n            // 0 index is 180 degress behind 0 deg\n            var rotateDeg = nodeIndex * increment - 180;\n            var styleVal = 'rotate(' + rotateDeg + 'deg)';\n\n            this.cachedEls.clockHand.style.transform = styleVal;\n            this.cachedEls.clockHand.style['-webkit-transform'] = styleVal;\n            this.cachedEls.clockHand.style['-ms-transform'] = styleVal;\n        }\n    }, {\n        key: 'showHours',\n        value: function showHours() {\n            var isMilitaryFormat = this.isMilitaryFormat();\n            var hourEls = isMilitaryFormat ? this.cachedEls.clockMilitaryHoursLi : this.cachedEls.clockHoursLi;\n\n            this.toggleHoursVisible(true, isMilitaryFormat);\n            this.toggleMinutesVisible();\n            this.rotateHand(this.getActiveIndex(hourEls));\n        }\n    }, {\n        key: 'showMinutes',\n        value: function showMinutes() {\n            var minuteEls = this.cachedEls.clockMinutesLi;\n\n            this.toggleHoursVisible();\n            this.toggleMinutesVisible(true);\n            this.rotateHand(this.getActiveIndex(minuteEls), 6);\n            this.cachedEls.clockHand.style.height = '115px';\n        }\n    }, {\n        key: 'finish',\n        value: function finish() {\n            this.timeSelected();\n            this.hide();\n        }\n\n        /**\n         * Toggle hour (both military and standard) clock visiblity in DOM\n         *\n         * @param {boolean} isVisible Is clock face toggled visible or hidden\n         * @param {boolean} isMilitaryFormat Is using military hour format\n         * @return {void}\n         */\n\n    }, {\n        key: 'toggleHoursVisible',\n        value: function toggleHoursVisible() {\n            var isVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var isMilitaryFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            this.cachedEls.clockHours.style.display = isVisible && !isMilitaryFormat ? 'block' : 'none';\n            this.cachedEls.clockMilitaryHours.style.display = isVisible && isMilitaryFormat ? 'block' : 'none';\n            this.cachedEls.buttonNext.style.display = !isVisible ? 'inline-block' : 'none';\n        }\n\n        /**\n         * Toggle minute clock visiblity in DOM\n         *\n         * @param {boolean} isVisible Is clock face toggled visible or hidden\n         * @return {void}\n         */\n\n    }, {\n        key: 'toggleMinutesVisible',\n        value: function toggleMinutesVisible() {\n            var isVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            this.cachedEls.clockMinutes.style.display = isVisible ? 'block' : 'none';\n            this.cachedEls.buttonBack.style.display = isVisible ? 'inline-block' : 'none';\n            this.cachedEls.buttonNext.style.display = !isVisible ? 'inline-block' : 'none';\n            this.cachedEls.buttonFinish.style.display = isVisible ? 'inline-block' : 'none';\n        }\n\n        /**\n         * Get the active time element index\n         *\n         * @param {HTMLCollection} timeEls Collection of time elements to find active in\n         * @return {integer} Active element index\n         */\n\n    }, {\n        key: 'getActiveIndex',\n        value: function getActiveIndex(timeEls) {\n            var activeIndex = 0;\n\n            [].some.call(timeEls, function (timeEl, index) {\n                if (timeEl.classList.contains('mtp-clock--active')) {\n                    activeIndex = index;\n\n                    return true;\n                }\n\n                return false;\n            });\n\n            return activeIndex;\n        }\n\n        /**\n         * Set selected time to input element\n         *\n         * @return {void}\n         */\n\n    }, {\n        key: 'timeSelected',\n        value: function timeSelected() {\n            var hours = this.cachedEls.displayHours.innerHTML;\n            var minutes = this.cachedEls.displayMinutes.innerHTML;\n            var meridiem = this.isMilitaryFormat() ? '' : this.cachedEls.displayMeridiem.innerHTML;\n            var timeValue = hours + ':' + minutes + ' ' + meridiem;\n\n            this.inputEl.value = timeValue.trim();\n            this.inputEl.dispatchEvent(new Event('input'));\n        }\n\n        /**\n         * Set active clock face element\n         *\n         * @param {Element} containerEl New active elements .parentNode\n         * @param {Element} activeEl Element to set active\n         * @return {void}\n         */\n\n    }, {\n        key: 'setActiveEl',\n        value: function setActiveEl(containerEl, activeEl) {\n            var activeClassName = 'mtp-clock--active';\n            var currentActive = containerEl.getElementsByClassName(activeClassName)[0];\n\n            currentActive.classList.remove(activeClassName);\n            activeEl.classList.add(activeClassName);\n        }\n\n        /**\n         * Meridiem select event handler\n         *\n         * @param {Evenet} event Event object passed from listener\n         * @return {void}\n         */\n\n    }, {\n        key: 'meridiemSelectEvent',\n        value: function meridiemSelectEvent(event) {\n            var activeClassName = 'mtp-clock--active';\n            var element = event.target;\n            var currentActive = this.cachedEls.meridiem.getElementsByClassName(activeClassName)[0];\n            var value = element.innerHTML;\n\n            if (!currentActive.isEqualNode(element)) {\n                currentActive.classList.remove(activeClassName);\n                element.classList.add(activeClassName);\n                this.cachedEls.displayMeridiem.innerHTML = value;\n            }\n        }\n\n        /**\n         * Hour select event handler\n         *\n         * @param {Event} event Event object passed from listener\n         * @param {HTMLElement} containerEl Element containing time list elements\n         * @param {HTMLCollection} listEls Collection of list elements\n         * @return {void}\n         */\n\n    }, {\n        key: 'hourSelectEvent',\n        value: function hourSelectEvent(event, containerEl, listEls) {\n            event.stopPropagation();\n\n            var newActive = event.target;\n            var parentEl = newActive.parentElement;\n            var isInner = parentEl.classList.contains('mtp-clock__hours--inner');\n\n            this.cachedEls.clockHand.style.height = isInner ? '90px' : '105px';\n            this.setActiveEl(containerEl, newActive);\n\n            var activeIndex = this.getActiveIndex(listEls);\n\n            this.setDisplayTime({ hours: newActive.innerHTML });\n            this.rotateHand(activeIndex);\n            this.events.trigger('hourSelected');\n        }\n\n        /**\n         * Hour select event handler\n         *\n         * @param {Event} event Event object passed from listener\n         * @param {HTMLElement} containerEl Element containing time list elements\n         * @param {HTMLCollection} listEls Collection of list elements\n         * @return {void}\n         */\n\n    }, {\n        key: 'minuteSelectEvent',\n        value: function minuteSelectEvent(event, containerEl, listEls) {\n            event.stopPropagation();\n\n            var newActive = event.target;\n\n            this.setActiveEl(containerEl, newActive);\n\n            var activeIndex = this.getActiveIndex(listEls);\n            var displayTime = activeIndex;\n\n            this.setDisplayTime({ minutes: displayTime });\n            this.rotateHand(activeIndex, 6);\n            this.events.trigger('minuteSelected');\n        }\n\n        /**\n         * Check if picker set to military time mode\n         *\n         * @return {boolean} Is in military time mode\n         */\n\n    }, {\n        key: 'isMilitaryFormat',\n        value: function isMilitaryFormat() {\n            return Boolean(this.inputEl.mtpOptions.timeFormat === 'military');\n        }\n\n        /**\n         * Check if picker object has already set events on picker elements\n         *\n         * @return {boolean} Has events been set on picker elements\n         */\n\n    }, {\n        key: 'hasSetEvents',\n        value: function hasSetEvents() {\n            return this.cachedEls.wrapper.classList.contains('mtp-events-set');\n        }\n\n        /**\n         * Check if template has already been appended to DOM\n         *\n         * @return {boolean} Is template in DOM\n         */\n\n    }, {\n        key: 'isTemplateInDOM',\n        value: function isTemplateInDOM() {\n            return Boolean(document.getElementsByClassName('mtp-overlay')[0]);\n        }\n    }]);\n\n    return TimePicker;\n}();\n\nexports.default = TimePicker;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar template = \"\\n<div class=\\\"mtp-overlay\\\" style=\\\"display:none\\\">\\n    <div class=\\\"mtp-wrapper\\\">\\n        <div class=\\\"mtp-display\\\">\\n            <span class=\\\"mtp-display__hours\\\">12</span>:\\n            <span class=\\\"mtp-display__minutes\\\">00</span>\\n            <span class=\\\"mtp-display__meridiem\\\">am</span>\\n        </div><!-- END .mtp-display -->\\n        <div class=\\\"mtp-picker\\\">\\n            <div class=\\\"mtp-meridiem\\\">\\n                <span class=\\\"mtp-clock--active\\\">am</span>\\n                <span>pm</span>\\n            </div><!-- END .mtp-meridiem -->\\n            <div class=\\\"mtp-clock\\\">\\n                <div class=\\\"mtp-clock__center\\\"></div>\\n                <div class=\\\"mtp-clock__hand\\\"></div>\\n                <ul class=\\\"mtp-clock__time mtp-clock__outer mtp-clock__hours\\\" style=\\\"display:none\\\">\\n                    <li class=\\\"mtp-clock--active\\\">12</li>\\n                    <li>1</li>\\n                    <li>2</li>\\n                    <li>3</li>\\n                    <li>4</li>\\n                    <li>5</li>\\n                    <li>6</li>\\n                    <li>7</li>\\n                    <li>8</li>\\n                    <li>9</li>\\n                    <li>10</li>\\n                    <li>11</li>\\n                </ul>\\n                <ul class=\\\"mtp-clock__time mtp-clock__outer mtp-clock__minutes\\\" style=\\\"display:none\\\">\\n                    <li class=\\\"mtp-clock--active\\\">0</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>5</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>10</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>15</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>20</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>25</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>30</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>35</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>40</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>45</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>50</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>55</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                    <li>&middot;</li>\\n                </ul>\\n                <ul class=\\\"mtp-clock__time mtp-clock__hours-military\\\" style=\\\"display:none\\\">\\n                    <div class=\\\"mtp-clock__hours--inner\\\">\\n                        <li class=\\\"mtp-clock--active\\\">00</li>\\n                        <li>13</li>\\n                        <li>14</li>\\n                        <li>15</li>\\n                        <li>16</li>\\n                        <li>17</li>\\n                        <li>18</li>\\n                        <li>19</li>\\n                        <li>20</li>\\n                        <li>21</li>\\n                        <li>22</li>\\n                        <li>23</li>\\n                    </div>\\n                    <div class=\\\"mtp-clock__hours\\\">\\n                        <li>12</li>\\n                        <li>1</li>\\n                        <li>2</li>\\n                        <li>3</li>\\n                        <li>4</li>\\n                        <li>5</li>\\n                        <li>6</li>\\n                        <li>7</li>\\n                        <li>8</li>\\n                        <li>9</li>\\n                        <li>10</li>\\n                        <li>11</li>\\n                    </div>\\n                </ul>\\n            </div><!-- END .mtp-clock -->\\n            <div class=\\\"mtp-actions\\\">\\n                <button type=\\\"button\\\" class=\\\"mtp-actions__button mtp-actions__cancel\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"mtp-actions__button mtp-actions__back\\\" style=\\\"display:none\\\">Back</button>\\n                <button type=\\\"button\\\" class=\\\"mtp-actions__button mtp-actions__next\\\">Next</button>\\n                <button type=\\\"button\\\" class=\\\"mtp-actions__button mtp-actions__finish\\\" style=\\\"display:none\\\">Done</button>\\n            </div><!-- END .mtp-actions -->\\n        </div><!-- END .mtp-picker -->\\n    </div><!-- END .mtp-wrapper -->\\n</div><!-- END .mtp-overlay -->\\n\";\n\nexports.default = template;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Object.assign polyfill\n *\n * @param {object} target Target object to merge properties onto\n * @param {...object} sources  Source object to merge properties from\n * @return {object} Target object with merged properties\n */\nfunction assign(target) {\n    if (target === 'undefined' || target === null) {\n        throw new TypeError('Cannot convert first argument to object');\n    }\n\n    var to = Object(target);\n\n    for (var inc = 0; inc < (arguments.length <= 1 ? 0 : arguments.length - 1); inc += 1) {\n        var nextSource = arguments.length <= inc + 1 ? undefined : arguments[inc + 1];\n\n        if (nextSource === 'undefined' || nextSource === null) {\n            continue;\n        }\n\n        nextSource = Object(nextSource);\n\n        var keysArray = Object.keys(nextSource);\n\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n            if (desc !== 'undefined' && desc.enumerable) {\n                to[nextKey] = nextSource[nextKey];\n            }\n        }\n    }\n\n    return to;\n}\n\nexports.default = assign;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class Events\n *\n * @prop {object} events - Hash table of events and their assigned handler callbacks\n */\nvar Events = function () {\n    function Events() {\n        _classCallCheck(this, Events);\n\n        this.events = {};\n    }\n\n    _createClass(Events, [{\n        key: \"on\",\n\n\n        /**\n         * Set handler on event\n         *\n         * @param {string} event - Event name to set handler to\n         * @param {func} handler - Handler function callback\n         * @return {void}\n         */\n        value: function on(event, handler) {\n            if (!this.events[event]) {\n                this.events[event] = [];\n            }\n\n            this.events[event].push(handler);\n        }\n\n        /**\n         * Remove all event handler for the given event\n         *\n         * @param {string} event - Event name to remove handler from\n         * @return {void}\n         */\n\n    }, {\n        key: \"off\",\n        value: function off(event) {\n            if (this.events[event]) {\n                this.events[event] = [];\n            }\n        }\n\n        /**\n         * Trigger event with params\n         *\n         * @param {string} event - Event to trigger\n         * @param {object} params - Parameters to pass to event handler\n         * @return {void}\n         */\n\n    }, {\n        key: \"trigger\",\n        value: function trigger(event, params) {\n            if (this.events[event] && this.events[event].length) {\n                this.events[event].forEach(function (handler) {\n                    return handler(params);\n                });\n            }\n        }\n    }]);\n\n    return Events;\n}();\n\nexports.default = Events;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// TimePicker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 58b54ef736f90ac014cf","import template from './template';\nimport assign from './assign';\nimport Events from './events';\nimport '../sass/main.scss';\n\n/**\n * @class TimePicker\n *\n * @prop {string} template - TimePicker template\n * @prop {object} defaultOptions - Default config options\n * @prop {string} defaultOptions.timeFormat - 12 or 24 hour format ['standard', 'military']\n * @prop {bool} defaultOptions.autoNext - Auto-next on time element select\n * @prop {object} cachedEls - Cached elements in template\n * @prop {HTMLElement} cachedEls.body - document.body\n * @prop {HTMLElement} cachedEls.overlay - Overlay element ('.mtp-overlay')[0]\n * @prop {HTMLElement} cachedEls.wrapper - Wrapper element ('.mtp-wrapper')[0]\n * @prop {HTMLElement} cachedEls.picker - Selection elements wrapper ('.mtp-picker')[0]\n * @prop {HTMLElement} cachedEls.meridiem - Meridiem selection elements wrapper ('.mtp-meridiem')[0]\n * @prop {HTMLCollection} cachedEls.meridiemSpans - Meridiem selection elements meridiem('span')\n * @prop {HTMLElement} cachedEls.displayHours - Selected hour display element ('.mtp-display__hours')[0]\n * @prop {HTMLElement} cachedEls.displayMinutes - Selected minutes display element ('.mtp-display__minutes')[0]\n * @prop {HTMLElement} cachedEls.displayMerdiem - Selected meridiem display element ('.mtp-display__meridiem')[0]\n * @prop {HTMLElement} cachedEls.buttonCancel - Cancel button element ('.mtp-actions__cancel')[0]\n * @prop {HTMLElement} cachedEls.buttonBack - Back button element ('.mtp-actions__back')[0]\n * @prop {HTMLElement} cachedEls.buttonNext - Next button element ('.mtp-actions__next')[0]\n * @prop {HTMLElement} cachedEls.buttonFinish - Finish button element ('.mtp-actions__finish')[0]\n * @prop {HTMLElement} cachedEls.clockHours - Hour elements display wrapper ('.mtp-clock__hours')[0]\n * @prop {HTMLElement} cachedEls.clockMinutes - Minute elements display wrapper ('.mtp-clock__minutes')[0]\n * @prop {HTMLElement} cachedEls.clockMilitaryHours - Military hour elements display wrapper ('.mtp_clock__hours--military')[0]\n * @prop {HTMLElement} cachedEls.clockHand - Clock hand display ('.mtp-clock__hand')[0]\n * @prop {HTMLCollection} cachedEls.clockHoursLi - Hour list elements clockHours('li')\n * @prop {HTMLCollection} cachedEls.clockMinutesLi - Minute list elements clockMinutes('li')\n * @prop {HTMLCollection} cachedEls.clockMilitaryHoursLi - Militar Hour li elements clockMilitaryHours('li')\n */\nclass TimePicker {\n    template = template;\n    defaultOptions = {\n        timeFormat: 'standard',\n        autoNext: false,\n    };\n    cachedEls = {};\n\n    /**\n     * Initialize new TimePicker instance\n     *\n     * @return {TimePicker} New TimePicker instance\n     */\n    constructor() {\n        this.events = new Events();\n\n        this.setupTemplate();\n\n        this.cachedEls.body = document.body;\n        this.cachedEls.overlay = this.cachedEls.body.getElementsByClassName('mtp-overlay')[0];\n        this.cachedEls.wrapper = this.cachedEls.overlay.getElementsByClassName('mtp-wrapper')[0];\n        this.cachedEls.picker = this.cachedEls.wrapper.getElementsByClassName('mtp-picker')[0];\n        this.cachedEls.meridiem = this.cachedEls.wrapper.getElementsByClassName('mtp-meridiem')[0];\n        this.cachedEls.meridiemSpans = this.cachedEls.meridiem.getElementsByTagName('span');\n        this.cachedEls.displayHours = this.cachedEls.wrapper.getElementsByClassName('mtp-display__hours')[0];\n        this.cachedEls.displayMinutes = this.cachedEls.wrapper.getElementsByClassName('mtp-display__minutes')[0];\n        this.cachedEls.displayMeridiem = this.cachedEls.wrapper.getElementsByClassName('mtp-display__meridiem')[0];\n        this.cachedEls.buttonCancel = this.cachedEls.picker.getElementsByClassName('mtp-actions__cancel')[0];\n        this.cachedEls.buttonBack = this.cachedEls.picker.getElementsByClassName('mtp-actions__back')[0];\n        this.cachedEls.buttonNext = this.cachedEls.picker.getElementsByClassName('mtp-actions__next')[0];\n        this.cachedEls.buttonFinish = this.cachedEls.picker.getElementsByClassName('mtp-actions__finish')[0];\n        this.cachedEls.clockHours = this.cachedEls.picker.getElementsByClassName('mtp-clock__hours')[0];\n        this.cachedEls.clockMinutes = this.cachedEls.picker.getElementsByClassName('mtp-clock__minutes')[0];\n        this.cachedEls.clockMilitaryHours = this.cachedEls.picker.getElementsByClassName('mtp-clock__hours-military')[0];\n        this.cachedEls.clockHand = this.cachedEls.picker.getElementsByClassName('mtp-clock__hand')[0];\n        this.cachedEls.clockHoursLi = this.cachedEls.clockHours.getElementsByTagName('li');\n        this.cachedEls.clockMinutesLi = this.cachedEls.clockMinutes.getElementsByTagName('li');\n        this.cachedEls.clockMilitaryHoursLi = this.cachedEls.clockMilitaryHours.getElementsByTagName('li');\n\n        this.setEvents();\n\n        return this;\n    }\n\n    /**\n     * Bind event to the input element to open when `focus` event is events.triggered\n     *\n     * @param {string|HTMLElement} inputEl Selector element to be queried or existing HTMLElement\n     * @param {object} options Options to merged with defaults and set to input element object\n     * @return {void}\n     */\n    bindInput(inputEl, options = {}) {\n        const element = inputEl instanceof HTMLElement ? inputEl : document.querySelector(inputEl);\n\n        element.mtpOptions = assign({}, this.defaultOptions, options);\n        element.addEventListener('focus', event => this.showEvent(event));\n    }\n\n    /**\n     * Open picker with the input provided in context without binding events\n     *\n     * @param {string|HTMLElement} inputEl Selector element to be queried or existing HTMLElement\n     * @param {object} options Options to merged with defaults and set to input element object\n     * @return {void}\n     */\n    openOnInput(inputEl, options = {}) {\n        this.inputEl = inputEl instanceof HTMLElement ? inputEl : document.querySelector(inputEl);\n        this.inputEl.mtpOptions = assign({}, this.defaultOptions, options);\n        this.show();\n    }\n\n    /**\n     * Setup the template in DOM if not already\n     *\n     * @return {void}\n     */\n    setupTemplate() {\n        if (!this.isTemplateInDOM()) {\n            document.body.insertAdjacentHTML('beforeend', template);\n        }\n    }\n\n    /**\n     * Set the events on picker elements\n     *\n     * @return {void}\n     */\n    setEvents() {\n        if (!this.hasSetEvents()) {\n            // close\n            this.cachedEls.overlay.addEventListener('click', event => this.hideEvent(event));\n\n            this.cachedEls.buttonCancel.addEventListener('click', event => this.hideEvent(event));\n            this.cachedEls.buttonNext.addEventListener('click', () => this.showMinutes());\n            this.cachedEls.buttonBack.addEventListener('click', () => this.showHours());\n            this.cachedEls.buttonFinish.addEventListener('click', () => this.finish());\n\n            // meridiem select events\n            [].forEach.call(this.cachedEls.meridiemSpans, span => {\n                span.addEventListener('click', event => this.meridiemSelectEvent(event));\n            });\n\n            // time select events\n            [].forEach.call(this.cachedEls.clockHoursLi, hour => {\n                hour.addEventListener('click', event => {\n                    this.hourSelectEvent(event, this.cachedEls.clockHours, this.cachedEls.clockHoursLi);\n                });\n            });\n            [].forEach.call(this.cachedEls.clockMilitaryHoursLi, hour => {\n                hour.addEventListener('click', event => {\n                    this.hourSelectEvent(event, this.cachedEls.clockMilitaryHours, this.cachedEls.clockMilitaryHoursLi);\n                });\n            });\n            [].forEach.call(this.cachedEls.clockMinutesLi, minute => {\n                minute.addEventListener('click', event => {\n                    this.minuteSelectEvent(event, this.cachedEls.clockMinutes, this.cachedEls.clockMinutesLi);\n                });\n            });\n\n            this.cachedEls.wrapper.classList.add('mtp-events-set');\n        }\n    }\n\n    /**\n     * Show the picker in the DOM\n     *\n     * @return {void}\n     */\n    show() {\n        const isMilitaryFormat = this.isMilitaryFormat();\n\n        // blur input to prevent onscreen keyboard from displaying (mobile hack)\n        this.inputEl.blur();\n        this.toggleHoursVisible(true, isMilitaryFormat);\n        this.toggleMinutesVisible();\n        this.setDisplayTime({\n            hours: isMilitaryFormat ? '00' : '12',\n            minutes: '0',\n        });\n\n        this.cachedEls.body.style.overflow = 'hidden';\n        this.cachedEls.displayMeridiem.style.display = isMilitaryFormat ? 'none' : 'inline';\n        this.cachedEls.meridiem.style.display = isMilitaryFormat ? 'none' : 'block';\n        this.cachedEls.overlay.style.display = 'block';\n        this.cachedEls.clockHand.style.height = isMilitaryFormat ? '90px' : '105px';\n\n        this.events.trigger('show');\n    }\n\n    /**\n     * Event handle for input focus\n     *\n     * @param {Event} event Event object passed from listener\n     * @return {void}\n     */\n    showEvent(event) {\n        this.inputEl = event.target;\n        this.show();\n    }\n\n    /**\n     * Hide the picker in the DOM\n     *\n     * @return {void}\n     */\n    hide() {\n        this.cachedEls.overlay.style.display = 'none';\n        this.cachedEls.body.style.overflow = '';\n\n        this.inputEl.dispatchEvent(new Event('blur'));\n        this.resetState();\n        this.events.trigger('hide');\n    }\n\n    /**\n     * Hide the picker element on the page\n     *\n     * @param {Event} event Event object passed from event listener callback\n     * @return {void}\n     */\n    hideEvent(event) {\n        event.stopPropagation();\n\n        // only allow event based close if event.target contains one of these classes\n        // hack to prevent overlay close event from events.triggering on all elements because\n        // they are children of overlay\n        const allowedClasses = ['mtp-overlay', 'mtp-actions__cancel'];\n        const classList = event.target.classList;\n        const isAllowed = allowedClasses.some(allowedClass => classList.contains(allowedClass));\n\n        if (isAllowed) {\n            this.hide();\n        }\n    }\n\n    /**\n     * Reset picker state to defaults\n     *\n     * @return {void}\n     */\n    resetState() {\n        this.currentStep = 0;\n        this.toggleHoursVisible(true, this.isMilitaryFormat());\n        this.toggleMinutesVisible();\n        this.cachedEls.clockHoursLi[0].dispatchEvent(new Event('click'));\n        this.cachedEls.clockMinutesLi[0].dispatchEvent(new Event('click'));\n        this.cachedEls.clockMilitaryHoursLi[0].dispatchEvent(new Event('click'));\n        this.cachedEls.meridiemSpans[0].dispatchEvent(new Event('click'));\n    }\n\n    /**\n     * Set the displayed time, which will be used to fill input value on completetion\n     *\n     * @param {object} hours: Hour display time, minutes: Minute display time\n     * @return {void}\n     */\n    setDisplayTime({hours, minutes}) {\n        if (hours) {\n            this.cachedEls.displayHours.innerHTML = hours.trim();\n        }\n\n        if (minutes) {\n            const min = minutes < 10 ? `0${minutes}` : minutes;\n\n            this.cachedEls.displayMinutes.innerHTML = min.trim();\n        }\n    }\n\n    /**\n     * Rotate the hand element to selected time\n     *\n     * @param {integer} nodeIndex Index of active element\n     * @param {integer} increment Degree increment elements are on\n     * @return {void}\n     */\n    rotateHand(nodeIndex = 9, increment = 30) {\n        // 0 index is 180 degress behind 0 deg\n        const rotateDeg = nodeIndex * increment - 180;\n        const styleVal = `rotate(${rotateDeg}deg)`;\n\n        this.cachedEls.clockHand.style.transform = styleVal;\n        this.cachedEls.clockHand.style['-webkit-transform'] = styleVal;\n        this.cachedEls.clockHand.style['-ms-transform'] = styleVal;\n    }\n\n    showHours() {\n        const isMilitaryFormat = this.isMilitaryFormat();\n        const hourEls = isMilitaryFormat ? this.cachedEls.clockMilitaryHoursLi : this.cachedEls.clockHoursLi;\n\n        this.toggleHoursVisible(true, isMilitaryFormat);\n        this.toggleMinutesVisible();\n        this.rotateHand(this.getActiveIndex(hourEls));\n    }\n\n    showMinutes() {\n        const minuteEls = this.cachedEls.clockMinutesLi;\n\n        this.toggleHoursVisible();\n        this.toggleMinutesVisible(true);\n        this.rotateHand(this.getActiveIndex(minuteEls), 6);\n        this.cachedEls.clockHand.style.height = '115px';\n    }\n\n    finish() {\n        this.timeSelected();\n        this.hide();\n    }\n\n    /**\n     * Toggle hour (both military and standard) clock visiblity in DOM\n     *\n     * @param {boolean} isVisible Is clock face toggled visible or hidden\n     * @param {boolean} isMilitaryFormat Is using military hour format\n     * @return {void}\n     */\n    toggleHoursVisible(isVisible = false, isMilitaryFormat = false) {\n        this.cachedEls.clockHours.style.display = isVisible && !isMilitaryFormat ? 'block' : 'none';\n        this.cachedEls.clockMilitaryHours.style.display = isVisible && isMilitaryFormat ? 'block' : 'none';\n        this.cachedEls.buttonNext.style.display = !isVisible ? 'inline-block' : 'none';\n    }\n\n    /**\n     * Toggle minute clock visiblity in DOM\n     *\n     * @param {boolean} isVisible Is clock face toggled visible or hidden\n     * @return {void}\n     */\n    toggleMinutesVisible(isVisible = false) {\n        this.cachedEls.clockMinutes.style.display = isVisible ? 'block' : 'none';\n        this.cachedEls.buttonBack.style.display = isVisible ? 'inline-block' : 'none';\n        this.cachedEls.buttonNext.style.display = !isVisible ? 'inline-block' : 'none';\n        this.cachedEls.buttonFinish.style.display = isVisible ? 'inline-block' : 'none';\n    }\n\n    /**\n     * Get the active time element index\n     *\n     * @param {HTMLCollection} timeEls Collection of time elements to find active in\n     * @return {integer} Active element index\n     */\n    getActiveIndex(timeEls) {\n        let activeIndex = 0;\n\n        [].some.call(timeEls, (timeEl, index) => {\n            if (timeEl.classList.contains('mtp-clock--active')) {\n                activeIndex = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return activeIndex;\n    }\n\n    /**\n     * Set selected time to input element\n     *\n     * @return {void}\n     */\n    timeSelected() {\n        const hours = this.cachedEls.displayHours.innerHTML;\n        const minutes = this.cachedEls.displayMinutes.innerHTML;\n        const meridiem = this.isMilitaryFormat() ? '' : this.cachedEls.displayMeridiem.innerHTML;\n        const timeValue = `${hours}:${minutes} ${meridiem}`;\n\n        this.inputEl.value = timeValue.trim();\n        this.inputEl.dispatchEvent(new Event('input'));\n    }\n\n    /**\n     * Set active clock face element\n     *\n     * @param {Element} containerEl New active elements .parentNode\n     * @param {Element} activeEl Element to set active\n     * @return {void}\n     */\n    setActiveEl(containerEl, activeEl) {\n        const activeClassName = 'mtp-clock--active';\n        const currentActive = containerEl.getElementsByClassName(activeClassName)[0];\n\n        currentActive.classList.remove(activeClassName);\n        activeEl.classList.add(activeClassName);\n    }\n\n    /**\n     * Meridiem select event handler\n     *\n     * @param {Evenet} event Event object passed from listener\n     * @return {void}\n     */\n    meridiemSelectEvent(event) {\n        const activeClassName = 'mtp-clock--active';\n        const element = event.target;\n        const currentActive = this.cachedEls.meridiem.getElementsByClassName(activeClassName)[0];\n        const value = element.innerHTML;\n\n        if (!currentActive.isEqualNode(element)) {\n            currentActive.classList.remove(activeClassName);\n            element.classList.add(activeClassName);\n            this.cachedEls.displayMeridiem.innerHTML = value;\n        }\n    }\n\n    /**\n     * Hour select event handler\n     *\n     * @param {Event} event Event object passed from listener\n     * @param {HTMLElement} containerEl Element containing time list elements\n     * @param {HTMLCollection} listEls Collection of list elements\n     * @return {void}\n     */\n    hourSelectEvent(event, containerEl, listEls) {\n        event.stopPropagation();\n\n        const newActive = event.target;\n        const parentEl = newActive.parentElement;\n        const isInner = parentEl.classList.contains('mtp-clock__hours--inner');\n\n        this.cachedEls.clockHand.style.height = isInner ? '90px' : '105px';\n        this.setActiveEl(containerEl, newActive);\n\n        const activeIndex = this.getActiveIndex(listEls);\n\n        this.setDisplayTime({hours: newActive.innerHTML});\n        this.rotateHand(activeIndex);\n        this.events.trigger('hourSelected');\n    }\n\n    /**\n     * Hour select event handler\n     *\n     * @param {Event} event Event object passed from listener\n     * @param {HTMLElement} containerEl Element containing time list elements\n     * @param {HTMLCollection} listEls Collection of list elements\n     * @return {void}\n     */\n    minuteSelectEvent(event, containerEl, listEls) {\n        event.stopPropagation();\n\n        const newActive = event.target;\n\n        this.setActiveEl(containerEl, newActive);\n\n        const activeIndex = this.getActiveIndex(listEls);\n        const displayTime = activeIndex;\n\n        this.setDisplayTime({minutes: displayTime});\n        this.rotateHand(activeIndex, 6);\n        this.events.trigger('minuteSelected');\n    }\n\n    /**\n     * Check if picker set to military time mode\n     *\n     * @return {boolean} Is in military time mode\n     */\n    isMilitaryFormat() {\n        return Boolean(this.inputEl.mtpOptions.timeFormat === 'military');\n    }\n\n    /**\n     * Check if picker object has already set events on picker elements\n     *\n     * @return {boolean} Has events been set on picker elements\n     */\n    hasSetEvents() {\n        return this.cachedEls.wrapper.classList.contains('mtp-events-set');\n    }\n\n    /**\n     * Check if template has already been appended to DOM\n     *\n     * @return {boolean} Is template in DOM\n     */\n    isTemplateInDOM() {\n        return Boolean(document.getElementsByClassName('mtp-overlay')[0]);\n    }\n}\n\nexport default TimePicker;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/timepicker.js","const template = `\n<div class=\"mtp-overlay\" style=\"display:none\">\n    <div class=\"mtp-wrapper\">\n        <div class=\"mtp-display\">\n            <span class=\"mtp-display__hours\">12</span>:\n            <span class=\"mtp-display__minutes\">00</span>\n            <span class=\"mtp-display__meridiem\">am</span>\n        </div><!-- END .mtp-display -->\n        <div class=\"mtp-picker\">\n            <div class=\"mtp-meridiem\">\n                <span class=\"mtp-clock--active\">am</span>\n                <span>pm</span>\n            </div><!-- END .mtp-meridiem -->\n            <div class=\"mtp-clock\">\n                <div class=\"mtp-clock__center\"></div>\n                <div class=\"mtp-clock__hand\"></div>\n                <ul class=\"mtp-clock__time mtp-clock__outer mtp-clock__hours\" style=\"display:none\">\n                    <li class=\"mtp-clock--active\">12</li>\n                    <li>1</li>\n                    <li>2</li>\n                    <li>3</li>\n                    <li>4</li>\n                    <li>5</li>\n                    <li>6</li>\n                    <li>7</li>\n                    <li>8</li>\n                    <li>9</li>\n                    <li>10</li>\n                    <li>11</li>\n                </ul>\n                <ul class=\"mtp-clock__time mtp-clock__outer mtp-clock__minutes\" style=\"display:none\">\n                    <li class=\"mtp-clock--active\">0</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>5</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>10</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>15</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>20</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>25</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>30</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>35</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>40</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>45</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>50</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>55</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                    <li>&middot;</li>\n                </ul>\n                <ul class=\"mtp-clock__time mtp-clock__hours-military\" style=\"display:none\">\n                    <div class=\"mtp-clock__hours--inner\">\n                        <li class=\"mtp-clock--active\">00</li>\n                        <li>13</li>\n                        <li>14</li>\n                        <li>15</li>\n                        <li>16</li>\n                        <li>17</li>\n                        <li>18</li>\n                        <li>19</li>\n                        <li>20</li>\n                        <li>21</li>\n                        <li>22</li>\n                        <li>23</li>\n                    </div>\n                    <div class=\"mtp-clock__hours\">\n                        <li>12</li>\n                        <li>1</li>\n                        <li>2</li>\n                        <li>3</li>\n                        <li>4</li>\n                        <li>5</li>\n                        <li>6</li>\n                        <li>7</li>\n                        <li>8</li>\n                        <li>9</li>\n                        <li>10</li>\n                        <li>11</li>\n                    </div>\n                </ul>\n            </div><!-- END .mtp-clock -->\n            <div class=\"mtp-actions\">\n                <button type=\"button\" class=\"mtp-actions__button mtp-actions__cancel\">Cancel</button>\n                <button type=\"button\" class=\"mtp-actions__button mtp-actions__back\" style=\"display:none\">Back</button>\n                <button type=\"button\" class=\"mtp-actions__button mtp-actions__next\">Next</button>\n                <button type=\"button\" class=\"mtp-actions__button mtp-actions__finish\" style=\"display:none\">Done</button>\n            </div><!-- END .mtp-actions -->\n        </div><!-- END .mtp-picker -->\n    </div><!-- END .mtp-wrapper -->\n</div><!-- END .mtp-overlay -->\n`;\n\nexport default template;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/template.js","/**\n * Object.assign polyfill\n *\n * @param {object} target Target object to merge properties onto\n * @param {...object} sources  Source object to merge properties from\n * @return {object} Target object with merged properties\n */\nfunction assign(target, ...sources) {\n    if (target === 'undefined' || target === null) {\n        throw new TypeError('Cannot convert first argument to object');\n    }\n\n    const to = Object(target);\n\n    for (let inc = 0; inc < sources.length; inc += 1) {\n        let nextSource = sources[inc];\n\n        if (nextSource === 'undefined' || nextSource === null) {\n            continue;\n        }\n\n        nextSource = Object(nextSource);\n\n        const keysArray = Object.keys(nextSource);\n\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            const nextKey = keysArray[nextIndex];\n            const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n            if (desc !== 'undefined' && desc.enumerable) {\n                to[nextKey] = nextSource[nextKey];\n            }\n        }\n    }\n\n    return to;\n}\n\nexport default assign;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/assign.js","\n/**\n * @class Events\n *\n * @prop {object} events - Hash table of events and their assigned handler callbacks\n */\nexport default class Events {\n    events = {};\n\n    /**\n     * Set handler on event\n     *\n     * @param {string} event - Event name to set handler to\n     * @param {func} handler - Handler function callback\n     * @return {void}\n     */\n    on(event, handler) {\n        if (!this.events[event]) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(handler);\n    }\n\n    /**\n     * Remove all event handler for the given event\n     *\n     * @param {string} event - Event name to remove handler from\n     * @return {void}\n     */\n    off(event) {\n        if (this.events[event]) {\n            this.events[event] = [];\n        }\n    }\n\n    /**\n     * Trigger event with params\n     *\n     * @param {string} event - Event to trigger\n     * @param {object} params - Parameters to pass to event handler\n     * @return {void}\n     */\n    trigger(event, params) {\n        if (this.events[event] && this.events[event].length) {\n            this.events[event].forEach(handler => handler(params));\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/events.js"],"sourceRoot":""}